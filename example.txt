example intro
//let nombre = "marcos"
function A(props){
 return <p>Hola {props.nombre}</p>
}

function B(props){
 return <p>{props.nombre} :10</p>
}*/
/*class Contador extends Component{
  constructor(){
    super();
    this.state = {
      contador:0
    };
  }

  aumentar = ()=>{this.setState({
    contador:this.state.contador+1
    }) 
  };
  
  render(){
    return (<div>
    <p>{this.state.contador}</p> 
    <button onClick={ this.aumentar } >Contar</button>
    </div>);
  }
}



//exaple form
class Formulario extends Component {
  constructor(props){
    super(props);

    this.state = {
      email:'',
      password: ''
    }
  }

/*
  syncEmailChanges(email){
    //console.log(email);
    this.setState({
      email : email
    })
  }

  syncPasswordChanges(password){
    //console.log(password);
    this.setState({
      password : password
    })
  }*/ //reemplza por  syncChanges

   syncChanges(value,property){
    let state = {};
    state[property]=value;
    this.setState(state);
  }

  submitForm=()=>{
    console.log(this.state)
  }

  render(){
    return (
      <form>
        <input onChange={(ev)=>{this.syncChanges(ev.target.value,'email')}} 
        type="email"
        value={this.state.email} placeholder="email"/>
        <input onChange={(ev)=>{this.syncChanges(ev.target.value,'password')}}
        type="password"
        value={this.state.password} placeholder="***"/>
        <div>
          <input onClick={this.submitForm}
          type="submit" value="iniciar sesion"/>
        </div>
      </form>

    );
  }
}


Example recorrer array

class Blog extends Component {
    constructor(props) {
    super(props);
    this.state = {
      articles :[
        "Mi primer colector en react",
        "Intro a react",
        "que es react"
      ]
    };
  }
  render(){
    return (
      <div>
      {
        this.state.articles.map((title)=>{
          return <p>{title}</p>
        })
      }
      </div>
    )
  }
}


//consumiendo json con fetch
class Blog extends Component {
    constructor(props) {
    super(props);

    this.state = {
      articles :[]
    };
  }

  componentDidMount(){
    let promesa = fetch('https://jsonplaceholder.typicode.com/posts');
    promesa.then(response=>response.json()).then(data=>{
        console.log(data);
        this.setState({
          articles:data
        })
      })

  }


  render(){
    return (
      <div>
      {
        this.state.articles.map((article)=>{
          return (<div className="card"><p>{article.title}</p></div>)
        })
      }
      </div>
    )
  }
}